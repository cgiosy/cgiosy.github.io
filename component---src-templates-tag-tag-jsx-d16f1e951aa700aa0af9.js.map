{"version":3,"sources":["webpack:///./src/components/PostTitle/PostTitle.jsx","webpack:///./src/templates/Tag/Tag.jsx","webpack:///./src/components/PostPreview/PostPreview.jsx","webpack:///./src/components/DateTime/DateTime.jsx","webpack:///./src/components/PostListItem/PostListItem.jsx","webpack:///./src/components/PostList/PostList.jsx"],"names":["PostTitle","children","style","className","TagTemplate","data","tag","pageContext","postEdges","allMarkdownRemark","edges","title","config","siteTitle","fontSize","textDecoration","tagQuery","PostPreview","DateTime","PostListItem","post","to","path","date","timeToRead","PostList","map","postEdge","node","fields","slug","tags","frontmatter","cover","excerpt","key"],"mappings":"8FAAA,mCAOeA,IAJG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,MAAZ,OAChB,wBAAIC,UAAU,aAAaD,MAAOA,GAAQD,K,kCCJ5C,iKAuBeG,UAdK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACbC,EADqC,EAAlBC,YACnBD,IACFE,EAAYH,EAAKI,kBAAkBC,MACzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,OAASL,EAAT,MAAkBM,IAAOC,YACtC,yBAAKV,UAAU,mBACb,kBAAC,IAAD,CAAWD,MAAO,CAACY,SAAU,SAAUC,eAAgB,cAAvD,OAA0ET,GAC1E,kBAAC,IAAD,CAAUE,UAAWA,OAStB,IAAMQ,EAAQ,c,0GCnBNC,G,UAJK,SAAC,GAAD,IAAEhB,EAAF,EAAEA,SAAF,OAClB,uBAAGE,UAAU,gBAAgBF,KCGhBiB,G,UAJE,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAH,OACf,0BAAME,UAAU,YAAYF,KCWfkB,G,UARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,kBAAC,OAAD,CAAMjB,UAAU,iBAAiBkB,GAAID,EAAKE,MACxC,kBAACtB,EAAA,EAAD,CAAWsB,KAAMF,EAAKE,MAAOF,EAAKT,OAClC,kBAAC,EAAD,KAAWS,EAAKG,KAAhB,MAAyBH,EAAKI,WAA9B,aACA,kBAAC,EAAD,S,UCWWC,IAlBE,SAAC,GAAD,IAAGjB,EAAH,EAAGA,UAAH,OACf,yBAAKL,UAAU,aAEXK,EAAUkB,KAAI,SAAAC,GAAQ,MAAK,CACzBL,KAAMK,EAASC,KAAKC,OAAOC,KAC3BC,KAAMJ,EAASC,KAAKI,YAAYD,KAChCE,MAAON,EAASC,KAAKI,YAAYC,MACjCtB,MAAOgB,EAASC,KAAKI,YAAYrB,MACjCY,KAAMI,EAASC,KAAKI,YAAYT,KAChCW,QAASP,EAASC,KAAKM,QACvBV,WAAYG,EAASC,KAAKJ,eACxBE,KAAI,SAAAN,GAAI,OACV,kBAAC,EAAD,CAAcA,KAAMA,EAAMe,IAAKf,EAAKE,a","file":"component---src-templates-tag-tag-jsx-d16f1e951aa700aa0af9.js","sourcesContent":["import React from \"react\";\nimport \"./PostTitle.css\"\n\nconst PostTitle = ({children, style}) => (\n  <h1 className=\"post-title\" style={style}>{children}</h1>\n);\n\nexport default PostTitle;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../layout\";\nimport PostTitle from \"../../components/PostTitle/PostTitle\";\nimport PostList from \"../../components/PostList/PostList\";\nimport config from \"../../../data/SiteConfig\";\nimport \"../Posts/Posts.css\";\n\nconst TagTemplate = ({ data, pageContext }) => {\n  const { tag } = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  return (\n    <Layout>\n      <Helmet title={`태그: ${tag} | ${config.siteTitle}`}></Helmet>\n      <div className=\"posts-container\">\n        <PostTitle style={{fontSize: \"1.25em\", textDecoration: \"underline\"}}>태그: {tag}</PostTitle>\n        <PostList postEdges={postEdges} />\n      </div>\n    </Layout>\n  );\n}\n\nexport default TagTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const tagQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport \"./PostPreview.css\"\n\nconst PostPreview = ({children}) => (\n  <p className=\"post-preview\">{children}</p>\n);\n\nexport default PostPreview;\n","import React from \"react\";\nimport \"./DateTime.css\"\n\nconst DateTime = ({ children }) => (\n  <time className=\"datetime\">{children}</time>\n);\n\nexport default DateTime;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PostTitle from \"../PostTitle/PostTitle\";\nimport PostPreview from \"../PostPreview/PostPreview\";\nimport DateTime from \"../DateTime/DateTime\";\nimport \"./PostListItem.css\";\n\nconst PostListItem = ({ post }) => (\n  <Link className=\"post-list-item\" to={post.path}>\n    <PostTitle path={post.path}>{post.title}</PostTitle>\n    <DateTime>{post.date} · {post.timeToRead} min read</DateTime>\n    <PostPreview></PostPreview>\n  </Link>\n)\n\nexport default PostListItem;\n","import React from \"react\";\nimport PostListItem from \"../PostListItem/PostListItem\";\nimport \"./PostList.css\";\n\nconst PostList = ({ postEdges }) => (\n  <div className=\"post-list\">\n    {\n      postEdges.map(postEdge => ({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })).map(post => (\n        <PostListItem post={post} key={post.path} />\n      ))\n    }\n  </div>\n);\n\nexport default PostList;\n"],"sourceRoot":""}